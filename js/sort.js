

document.getElementById("sort").addEventListener("click", () => {
  showModal({
    title: `
      <svg width="133" height="25" viewBox="0 0 133 25" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M18 22L14 18H17V8H14L18 4L22 8H19V18H22M2 20V18H12V20M2 14V12H9V14M2 8V6H6V8H2Z" fill="#DB8A74"/>
      <path d="M37.248 14.4365C37.248 14.2314 37.2161 14.0492 37.1523 13.8896C37.0931 13.7301 36.986 13.5843 36.8311 13.4521C36.6761 13.32 36.4574 13.1924 36.1748 13.0693C35.8968 12.9417 35.5413 12.8118 35.1084 12.6797C34.6344 12.5339 34.1969 12.3721 33.7959 12.1943C33.3994 12.012 33.0531 11.8024 32.7568 11.5654C32.4606 11.3239 32.2305 11.0482 32.0664 10.7383C31.9023 10.4238 31.8203 10.0615 31.8203 9.65137C31.8203 9.24577 31.9046 8.87663 32.0732 8.54395C32.2464 8.21126 32.4902 7.92415 32.8047 7.68262C33.1237 7.43652 33.4997 7.2474 33.9326 7.11523C34.3656 6.97852 34.8441 6.91016 35.3682 6.91016C36.1064 6.91016 36.7422 7.04688 37.2754 7.32031C37.8132 7.59375 38.2256 7.96061 38.5127 8.4209C38.8044 8.88118 38.9502 9.38932 38.9502 9.94531H37.248C37.248 9.61719 37.1774 9.3278 37.0361 9.07715C36.8994 8.82194 36.6898 8.62142 36.4072 8.47559C36.1292 8.32975 35.776 8.25684 35.3477 8.25684C34.9421 8.25684 34.6048 8.31836 34.3359 8.44141C34.0671 8.56445 33.8665 8.73079 33.7344 8.94043C33.6022 9.15007 33.5361 9.38704 33.5361 9.65137C33.5361 9.83822 33.5794 10.0091 33.666 10.1641C33.7526 10.3145 33.8848 10.4557 34.0625 10.5879C34.2402 10.7155 34.4635 10.8363 34.7324 10.9502C35.0013 11.0641 35.318 11.1735 35.6826 11.2783C36.234 11.4424 36.7148 11.6247 37.125 11.8252C37.5352 12.0212 37.877 12.2445 38.1504 12.4951C38.4238 12.7458 38.6289 13.0306 38.7656 13.3496C38.9023 13.6641 38.9707 14.0218 38.9707 14.4229C38.9707 14.8421 38.8864 15.2204 38.7178 15.5576C38.5492 15.8903 38.3076 16.1751 37.9932 16.4121C37.6833 16.6445 37.3096 16.8245 36.8721 16.9521C36.4391 17.0752 35.9561 17.1367 35.4229 17.1367C34.9443 17.1367 34.4727 17.0729 34.0078 16.9453C33.5475 16.8177 33.1283 16.624 32.75 16.3643C32.3717 16.0999 32.071 15.7718 31.8477 15.3799C31.6243 14.9834 31.5127 14.5208 31.5127 13.9922H33.2285C33.2285 14.3158 33.2832 14.5915 33.3926 14.8193C33.5065 15.0472 33.6637 15.234 33.8643 15.3799C34.0648 15.5212 34.2972 15.626 34.5615 15.6943C34.8304 15.7627 35.1175 15.7969 35.4229 15.7969C35.8239 15.7969 36.1589 15.7399 36.4277 15.626C36.7012 15.512 36.9062 15.3525 37.043 15.1475C37.1797 14.9424 37.248 14.7054 37.248 14.4365ZM40.1098 13.3838V13.2266C40.1098 12.6934 40.1872 12.1989 40.3422 11.7432C40.4971 11.2829 40.7204 10.8841 41.0121 10.5469C41.3083 10.2051 41.6684 9.94076 42.0922 9.75391C42.5206 9.5625 43.0036 9.4668 43.5414 9.4668C44.0837 9.4668 44.5668 9.5625 44.9906 9.75391C45.419 9.94076 45.7813 10.2051 46.0775 10.5469C46.3738 10.8841 46.5993 11.2829 46.7543 11.7432C46.9092 12.1989 46.9867 12.6934 46.9867 13.2266V13.3838C46.9867 13.917 46.9092 14.4115 46.7543 14.8672C46.5993 15.3229 46.3738 15.7217 46.0775 16.0635C45.7813 16.4007 45.4213 16.665 44.9975 16.8564C44.5736 17.0433 44.0928 17.1367 43.5551 17.1367C43.0128 17.1367 42.5274 17.0433 42.099 16.8564C41.6752 16.665 41.3152 16.4007 41.0189 16.0635C40.7227 15.7217 40.4971 15.3229 40.3422 14.8672C40.1872 14.4115 40.1098 13.917 40.1098 13.3838ZM41.7572 13.2266V13.3838C41.7572 13.7165 41.7914 14.0309 41.8598 14.3271C41.9281 14.6234 42.0352 14.8831 42.1811 15.1064C42.3269 15.3298 42.5137 15.5052 42.7416 15.6328C42.9695 15.7604 43.2406 15.8242 43.5551 15.8242C43.8604 15.8242 44.1247 15.7604 44.348 15.6328C44.5759 15.5052 44.7628 15.3298 44.9086 15.1064C45.0544 14.8831 45.1615 14.6234 45.2299 14.3271C45.3028 14.0309 45.3393 13.7165 45.3393 13.3838V13.2266C45.3393 12.8984 45.3028 12.5885 45.2299 12.2969C45.1615 12.0007 45.0521 11.7386 44.9018 11.5107C44.7559 11.2829 44.5691 11.1051 44.3412 10.9775C44.1179 10.8454 43.8513 10.7793 43.5414 10.7793C43.2315 10.7793 42.9626 10.8454 42.7348 10.9775C42.5115 11.1051 42.3269 11.2829 42.1811 11.5107C42.0352 11.7386 41.9281 12.0007 41.8598 12.2969C41.7914 12.5885 41.7572 12.8984 41.7572 13.2266ZM50.1219 11.0117V17H48.4744V9.60352H50.0467L50.1219 11.0117ZM52.3846 9.55566L52.3709 11.0869C52.2706 11.0687 52.1613 11.055 52.0428 11.0459C51.9288 11.0368 51.8149 11.0322 51.701 11.0322C51.4184 11.0322 51.1701 11.0732 50.9559 11.1553C50.7417 11.2327 50.5617 11.3467 50.4158 11.4971C50.2745 11.6429 50.1652 11.8206 50.0877 12.0303C50.0102 12.2399 49.9646 12.4746 49.951 12.7344L49.575 12.7617C49.575 12.2969 49.6206 11.8662 49.7117 11.4697C49.8029 11.0732 49.9396 10.7246 50.1219 10.4238C50.3087 10.123 50.5411 9.88835 50.8191 9.71973C51.1017 9.55111 51.4275 9.4668 51.7967 9.4668C51.8969 9.4668 52.004 9.47591 52.118 9.49414C52.2365 9.51237 52.3253 9.53288 52.3846 9.55566ZM57.2492 9.60352V10.8066H53.0793V9.60352H57.2492ZM54.2824 7.79199H55.9299V14.9561C55.9299 15.1839 55.9618 15.3594 56.0256 15.4824C56.0939 15.6009 56.1874 15.6807 56.3059 15.7217C56.4243 15.7627 56.5633 15.7832 56.7229 15.7832C56.8368 15.7832 56.9462 15.7764 57.051 15.7627C57.1558 15.749 57.2401 15.7354 57.3039 15.7217L57.3107 16.9795C57.174 17.0205 57.0145 17.057 56.8322 17.0889C56.6545 17.1208 56.4494 17.1367 56.217 17.1367C55.8387 17.1367 55.5038 17.0706 55.2121 16.9385C54.9204 16.8018 54.6926 16.5807 54.5285 16.2754C54.3645 15.9701 54.2824 15.5645 54.2824 15.0586V7.79199ZM66.1377 7.04688V17H64.4355V7.04688H66.1377ZM69.2617 7.04688V8.41406H61.3389V7.04688H69.2617ZM73.7641 15.5166V11.9893C73.7641 11.7249 73.7162 11.4971 73.6205 11.3057C73.5248 11.1143 73.379 10.9661 73.183 10.8613C72.9916 10.7565 72.7501 10.7041 72.4584 10.7041C72.1895 10.7041 71.9571 10.7497 71.7611 10.8408C71.5652 10.932 71.4125 11.055 71.3031 11.21C71.1937 11.3649 71.1391 11.5404 71.1391 11.7363H69.4984C69.4984 11.4447 69.5691 11.1621 69.7104 10.8887C69.8516 10.6152 70.0567 10.3714 70.3256 10.1572C70.5945 9.94303 70.9158 9.77441 71.2895 9.65137C71.6631 9.52832 72.0824 9.4668 72.5473 9.4668C73.1033 9.4668 73.5954 9.56022 74.0238 9.74707C74.4568 9.93392 74.7963 10.2165 75.0424 10.5947C75.293 10.9684 75.4184 11.4378 75.4184 12.0029V15.291C75.4184 15.6283 75.4411 15.9313 75.4867 16.2002C75.5368 16.4645 75.6075 16.6947 75.6986 16.8906V17H74.0102C73.9327 16.8223 73.8712 16.5967 73.8256 16.3232C73.7846 16.0452 73.7641 15.7764 73.7641 15.5166ZM74.0033 12.502L74.017 13.5205H72.8344C72.529 13.5205 72.2602 13.5501 72.0277 13.6094C71.7953 13.6641 71.6016 13.7461 71.4467 13.8555C71.2917 13.9648 71.1755 14.097 71.098 14.252C71.0206 14.4069 70.9818 14.5824 70.9818 14.7783C70.9818 14.9743 71.0274 15.1543 71.1186 15.3184C71.2097 15.4779 71.3419 15.6032 71.515 15.6943C71.6928 15.7855 71.907 15.8311 72.1576 15.8311C72.4949 15.8311 72.7888 15.7627 73.0395 15.626C73.2947 15.4847 73.4952 15.3138 73.641 15.1133C73.7868 14.9082 73.8643 14.7145 73.8734 14.5322L74.4066 15.2637C74.352 15.4505 74.2585 15.651 74.1264 15.8652C73.9942 16.0794 73.821 16.2845 73.6068 16.4805C73.3972 16.6719 73.1443 16.8291 72.848 16.9521C72.5564 17.0752 72.2191 17.1367 71.8363 17.1367C71.3533 17.1367 70.9226 17.041 70.5443 16.8496C70.1661 16.6536 69.8699 16.3916 69.6557 16.0635C69.4415 15.7308 69.3344 15.3548 69.3344 14.9355C69.3344 14.5436 69.4073 14.1973 69.5531 13.8965C69.7035 13.5911 69.9223 13.3359 70.2094 13.1309C70.501 12.9258 70.8565 12.7708 71.2758 12.666C71.6951 12.5566 72.1736 12.502 72.7113 12.502H74.0033ZM77.2479 6.5H78.8953V15.4209L78.7381 17H77.2479V6.5ZM83.7215 13.2334V13.377C83.7215 13.9238 83.66 14.4274 83.5369 14.8877C83.4184 15.3434 83.2361 15.7399 82.99 16.0771C82.7485 16.4144 82.4477 16.6764 82.0877 16.8633C81.7322 17.0456 81.3198 17.1367 80.8504 17.1367C80.3901 17.1367 79.9891 17.0501 79.6473 16.877C79.3055 16.7038 79.0184 16.4577 78.7859 16.1387C78.5581 15.8197 78.3735 15.4391 78.2322 14.9971C78.091 14.555 77.9907 14.0674 77.9314 13.5342V13.0762C77.9907 12.5384 78.091 12.0508 78.2322 11.6133C78.3735 11.1712 78.5581 10.7907 78.7859 10.4717C79.0184 10.1481 79.3032 9.89974 79.6404 9.72656C79.9822 9.55339 80.381 9.4668 80.8367 9.4668C81.3107 9.4668 81.7277 9.55794 82.0877 9.74023C82.4523 9.92253 82.7553 10.1823 82.9969 10.5195C83.2384 10.8522 83.4184 11.2487 83.5369 11.709C83.66 12.1693 83.7215 12.6774 83.7215 13.2334ZM82.074 13.377V13.2334C82.074 12.9007 82.0467 12.5885 81.992 12.2969C81.9373 12.0007 81.8462 11.7409 81.7186 11.5176C81.5955 11.2943 81.4269 11.1188 81.2127 10.9912C81.0031 10.859 80.741 10.793 80.4266 10.793C80.1349 10.793 79.8842 10.8431 79.6746 10.9434C79.465 11.0436 79.2895 11.1803 79.1482 11.3535C79.007 11.5267 78.8953 11.7272 78.8133 11.9551C78.7358 12.1829 78.6834 12.429 78.6561 12.6934V13.9307C78.6971 14.2725 78.7837 14.5869 78.9158 14.874C79.0525 15.1566 79.2439 15.3844 79.49 15.5576C79.7361 15.7262 80.0529 15.8105 80.4402 15.8105C80.7456 15.8105 81.0031 15.749 81.2127 15.626C81.4223 15.5029 81.5887 15.332 81.7117 15.1133C81.8393 14.89 81.9305 14.6302 81.9852 14.334C82.0444 14.0378 82.074 13.7188 82.074 13.377ZM86.9797 6.5V17H85.3254V6.5H86.9797ZM92.1451 17.1367C91.5982 17.1367 91.1038 17.0479 90.6617 16.8701C90.2242 16.6878 89.8505 16.4349 89.5406 16.1113C89.2353 15.7878 89.0006 15.4072 88.8365 14.9697C88.6725 14.5322 88.5904 14.0605 88.5904 13.5547V13.2812C88.5904 12.7025 88.6747 12.1784 88.8434 11.709C89.012 11.2396 89.2467 10.8385 89.5475 10.5059C89.8482 10.1686 90.2037 9.91113 90.6139 9.7334C91.024 9.55566 91.4684 9.4668 91.9469 9.4668C92.4755 9.4668 92.9381 9.55566 93.3346 9.7334C93.7311 9.91113 94.0592 10.1618 94.3189 10.4854C94.5833 10.8044 94.7792 11.1849 94.9068 11.627C95.039 12.069 95.1051 12.5566 95.1051 13.0898V13.7939H89.3902V12.6113H93.4781V12.4814C93.469 12.1852 93.4098 11.9072 93.3004 11.6475C93.1956 11.3877 93.0338 11.1781 92.815 11.0186C92.5963 10.859 92.3046 10.7793 91.94 10.7793C91.6666 10.7793 91.4228 10.8385 91.2086 10.957C90.999 11.071 90.8235 11.2373 90.6822 11.4561C90.541 11.6748 90.4316 11.9391 90.3541 12.249C90.2812 12.5544 90.2447 12.8984 90.2447 13.2812V13.5547C90.2447 13.8783 90.288 14.179 90.3746 14.457C90.4658 14.7305 90.5979 14.9697 90.7711 15.1748C90.9443 15.3799 91.1539 15.5417 91.4 15.6602C91.6461 15.7741 91.9264 15.8311 92.2408 15.8311C92.6373 15.8311 92.9905 15.7513 93.3004 15.5918C93.6103 15.4323 93.8792 15.2067 94.107 14.915L94.9752 15.7559C94.8157 15.9883 94.6083 16.2116 94.3531 16.4258C94.0979 16.6354 93.7857 16.8063 93.4166 16.9385C93.052 17.0706 92.6282 17.1367 92.1451 17.1367Z" fill="#DB8A74"/>
      </svg>
    `,
    body: `<div id="sort-body" class="sort-body"></div>
           <button id="add-sorter-btn" style="margin-top:12px;  background:none; border:none; cursor:pointer;">
              <svg width="84" height="16" viewBox="0 0 84 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12.6666 8.66671H8.66659V12.6667H7.33325V8.66671H3.33325V7.33337H7.33325V3.33337H8.66659V7.33337H12.6666V8.66671Z" fill="#5856D6"/>
              <path d="M22.2628 12.5H20.2855L23.2983 3.77273H25.6761L28.6847 12.5H26.7074L24.5213 5.76705H24.4531L22.2628 12.5ZM22.1392 9.0696H26.8097V10.5099H22.1392V9.0696ZM31.8082 12.6065C31.3111 12.6065 30.8608 12.4787 30.4574 12.223C30.0568 11.9645 29.7386 11.5852 29.5028 11.0852C29.2699 10.5824 29.1534 9.96591 29.1534 9.2358C29.1534 8.4858 29.2741 7.86222 29.5156 7.36506C29.7571 6.86506 30.0781 6.49148 30.4787 6.24432C30.8821 5.99432 31.3239 5.86932 31.804 5.86932C32.1705 5.86932 32.4759 5.93182 32.7202 6.05682C32.9673 6.17898 33.1662 6.33239 33.3168 6.51705C33.4702 6.69886 33.5866 6.87784 33.6662 7.05398H33.7216V3.77273H35.5327V12.5H33.7429V11.4517H33.6662C33.581 11.6335 33.4602 11.8139 33.304 11.9929C33.1506 12.169 32.9503 12.3153 32.7031 12.4318C32.4588 12.5483 32.1605 12.6065 31.8082 12.6065ZM32.3835 11.1619C32.6761 11.1619 32.9233 11.0824 33.125 10.9233C33.3295 10.7614 33.4858 10.5355 33.5938 10.2457C33.7045 9.95597 33.7599 9.61648 33.7599 9.22727C33.7599 8.83807 33.706 8.5 33.598 8.21307C33.4901 7.92614 33.3338 7.70455 33.1293 7.5483C32.9247 7.39205 32.6761 7.31392 32.3835 7.31392C32.0852 7.31392 31.8338 7.39489 31.6293 7.55682C31.4247 7.71875 31.2699 7.94318 31.1648 8.23011C31.0597 8.51705 31.0071 8.84943 31.0071 9.22727C31.0071 9.60795 31.0597 9.9446 31.1648 10.2372C31.2727 10.527 31.4276 10.7543 31.6293 10.919C31.8338 11.081 32.0852 11.1619 32.3835 11.1619ZM39.4371 12.6065C38.94 12.6065 38.4897 12.4787 38.0863 12.223C37.6857 11.9645 37.3675 11.5852 37.1317 11.0852C36.8988 10.5824 36.7823 9.96591 36.7823 9.2358C36.7823 8.4858 36.9031 7.86222 37.1445 7.36506C37.386 6.86506 37.707 6.49148 38.1076 6.24432C38.511 5.99432 38.9528 5.86932 39.4329 5.86932C39.7994 5.86932 40.1048 5.93182 40.3491 6.05682C40.5962 6.17898 40.7951 6.33239 40.9457 6.51705C41.0991 6.69886 41.2156 6.87784 41.2951 7.05398H41.3505V3.77273H43.1616V12.5H41.3718V11.4517H41.2951C41.2099 11.6335 41.0891 11.8139 40.9329 11.9929C40.7795 12.169 40.5792 12.3153 40.332 12.4318C40.0877 12.5483 39.7894 12.6065 39.4371 12.6065ZM40.0124 11.1619C40.305 11.1619 40.5522 11.0824 40.7539 10.9233C40.9585 10.7614 41.1147 10.5355 41.2227 10.2457C41.3335 9.95597 41.3888 9.61648 41.3888 9.22727C41.3888 8.83807 41.3349 8.5 41.2269 8.21307C41.119 7.92614 40.9627 7.70455 40.7582 7.5483C40.5536 7.39205 40.305 7.31392 40.0124 7.31392C39.7141 7.31392 39.4627 7.39489 39.2582 7.55682C39.0536 7.71875 38.8988 7.94318 38.7937 8.23011C38.6886 8.51705 38.636 8.84943 38.636 9.22727C38.636 9.60795 38.6886 9.9446 38.7937 10.2372C38.9016 10.527 39.0565 10.7543 39.2582 10.919C39.4627 11.081 39.7141 11.1619 40.0124 11.1619ZM52.1999 6.28267C52.1658 5.93892 52.0195 5.67187 51.761 5.48153C51.5025 5.29119 51.1516 5.19602 50.7085 5.19602C50.4073 5.19602 50.1531 5.23864 49.9457 5.32386C49.7383 5.40625 49.5792 5.52131 49.4684 5.66903C49.3604 5.81676 49.3065 5.98438 49.3065 6.17188C49.3008 6.32812 49.3335 6.46449 49.4045 6.58097C49.4783 6.69744 49.5792 6.7983 49.707 6.88352C49.8349 6.96591 49.9826 7.03835 50.1502 7.10085C50.3178 7.16051 50.4968 7.21165 50.6871 7.25426L51.4712 7.44176C51.8519 7.52699 52.2013 7.64062 52.5195 7.78267C52.8377 7.92472 53.1133 8.09943 53.3462 8.30682C53.5792 8.5142 53.7596 8.75852 53.8874 9.03977C54.0181 9.32102 54.0849 9.64347 54.0877 10.0071C54.0849 10.5412 53.9485 11.0043 53.6786 11.3963C53.4116 11.7855 53.0252 12.0881 52.5195 12.304C52.0167 12.517 51.4102 12.6236 50.6999 12.6236C49.9954 12.6236 49.3817 12.5156 48.859 12.2997C48.3391 12.0838 47.9329 11.7642 47.6403 11.3409C47.3505 10.9148 47.1985 10.3878 47.1843 9.75994H48.9698C48.9897 10.0526 49.0735 10.2969 49.2212 10.4929C49.3718 10.6861 49.5721 10.8324 49.8221 10.9318C50.0749 11.0284 50.3604 11.0767 50.6786 11.0767C50.9911 11.0767 51.2624 11.0312 51.4925 10.9403C51.7255 10.8494 51.9059 10.723 52.0337 10.5611C52.1616 10.3991 52.2255 10.2131 52.2255 10.0028C52.2255 9.80682 52.1673 9.64205 52.0508 9.50852C51.9371 9.375 51.7695 9.26136 51.5479 9.16761C51.3292 9.07386 51.0607 8.98864 50.7425 8.91193L49.7923 8.6733C49.0565 8.49432 48.4755 8.21449 48.0494 7.83381C47.6232 7.45312 47.4116 6.94034 47.4144 6.29545C47.4116 5.76705 47.5522 5.3054 47.8363 4.91051C48.1232 4.51562 48.5167 4.20739 49.0167 3.9858C49.5167 3.7642 50.0849 3.65341 50.7212 3.65341C51.369 3.65341 51.9343 3.7642 52.4173 3.9858C52.9031 4.20739 53.2809 4.51562 53.5508 4.91051C53.8207 5.3054 53.9599 5.76278 53.9684 6.28267H52.1999ZM58.2521 12.6278C57.5902 12.6278 57.0178 12.4872 56.5348 12.206C56.0547 11.9219 55.6839 11.527 55.4226 11.0213C55.1612 10.5128 55.0305 9.9233 55.0305 9.25284C55.0305 8.5767 55.1612 7.9858 55.4226 7.48011C55.6839 6.97159 56.0547 6.5767 56.5348 6.29545C57.0178 6.01136 57.5902 5.86932 58.2521 5.86932C58.9141 5.86932 59.4851 6.01136 59.9652 6.29545C60.4482 6.5767 60.8203 6.97159 61.0817 7.48011C61.343 7.9858 61.4737 8.5767 61.4737 9.25284C61.4737 9.9233 61.343 10.5128 61.0817 11.0213C60.8203 11.527 60.4482 11.9219 59.9652 12.206C59.4851 12.4872 58.9141 12.6278 58.2521 12.6278ZM58.2607 11.2216C58.5618 11.2216 58.8132 11.1364 59.0149 10.9659C59.2166 10.7926 59.3686 10.5568 59.4709 10.2585C59.576 9.96023 59.6286 9.62074 59.6286 9.24006C59.6286 8.85938 59.576 8.51989 59.4709 8.22159C59.3686 7.9233 59.2166 7.6875 59.0149 7.5142C58.8132 7.34091 58.5618 7.25426 58.2607 7.25426C57.9567 7.25426 57.701 7.34091 57.4936 7.5142C57.2891 7.6875 57.1342 7.9233 57.0291 8.22159C56.9268 8.51989 56.8757 8.85938 56.8757 9.24006C56.8757 9.62074 56.9268 9.96023 57.0291 10.2585C57.1342 10.5568 57.2891 10.7926 57.4936 10.9659C57.701 11.1364 57.9567 11.2216 58.2607 11.2216ZM62.6541 12.5V5.95455H64.4141V7.09659H64.4822C64.6016 6.69034 64.8018 6.38352 65.0831 6.17614C65.3643 5.96591 65.6882 5.8608 66.0547 5.8608C66.1456 5.8608 66.2436 5.86648 66.3487 5.87784C66.4538 5.8892 66.5462 5.90483 66.6257 5.92472V7.53551C66.5405 7.50994 66.4226 7.48722 66.272 7.46733C66.1214 7.44744 65.9837 7.4375 65.8587 7.4375C65.5916 7.4375 65.353 7.49574 65.1428 7.61222C64.9354 7.72585 64.7706 7.88494 64.6484 8.08949C64.5291 8.29403 64.4695 8.52983 64.4695 8.79688V12.5H62.6541ZM71.3739 5.95455V7.31818H67.4322V5.95455H71.3739ZM68.3271 4.38636H70.1424V10.4886C70.1424 10.6562 70.168 10.7869 70.2191 10.8807C70.2702 10.9716 70.3413 11.0355 70.4322 11.0724C70.5259 11.1094 70.6339 11.1278 70.756 11.1278C70.8413 11.1278 70.9265 11.1207 71.0117 11.1065C71.0969 11.0895 71.1623 11.0767 71.2077 11.0682L71.4933 12.419C71.4023 12.4474 71.2745 12.4801 71.1097 12.517C70.945 12.5568 70.7447 12.581 70.5089 12.5895C70.0714 12.6065 69.6879 12.5483 69.3583 12.4148C69.0316 12.2812 68.7773 12.0739 68.5955 11.7926C68.4137 11.5114 68.3242 11.1562 68.3271 10.7273V4.38636ZM75.4691 12.6278C74.7958 12.6278 74.2163 12.4915 73.7305 12.2188C73.2475 11.9432 72.8754 11.554 72.614 11.0511C72.3526 10.5455 72.2219 9.94744 72.2219 9.2571C72.2219 8.58381 72.3526 7.9929 72.614 7.48438C72.8754 6.97585 73.2433 6.57955 73.7177 6.29545C74.195 6.01136 74.7546 5.86932 75.3967 5.86932C75.8285 5.86932 76.2305 5.93892 76.6026 6.07812C76.9776 6.21449 77.3043 6.42045 77.5827 6.69602C77.864 6.97159 78.0827 7.31818 78.239 7.7358C78.3952 8.15057 78.4734 8.63636 78.4734 9.19318V9.69176H72.9464V8.56676H76.7646C76.7646 8.3054 76.7077 8.07386 76.5941 7.87216C76.4805 7.67045 76.3228 7.51278 76.1211 7.39915C75.9222 7.28267 75.6907 7.22443 75.4265 7.22443C75.1509 7.22443 74.9066 7.28835 74.6935 7.41619C74.4833 7.54119 74.3185 7.71023 74.1992 7.9233C74.0799 8.13352 74.0188 8.3679 74.016 8.62642V9.69602C74.016 10.0199 74.0756 10.2997 74.195 10.5355C74.3171 10.7713 74.489 10.9531 74.7106 11.081C74.9322 11.2088 75.195 11.2727 75.4989 11.2727C75.7006 11.2727 75.8853 11.2443 76.0529 11.1875C76.2205 11.1307 76.364 11.0455 76.4833 10.9318C76.6026 10.8182 76.6935 10.679 76.756 10.5142L78.435 10.625C78.3498 11.0284 78.1751 11.3807 77.9109 11.6818C77.6495 11.9801 77.3114 12.2131 76.8967 12.3807C76.4847 12.5455 76.0089 12.6278 75.4691 12.6278ZM79.658 12.5V5.95455H81.418V7.09659H81.4862C81.6055 6.69034 81.8058 6.38352 82.087 6.17614C82.3683 5.96591 82.6921 5.8608 83.0586 5.8608C83.1495 5.8608 83.2475 5.86648 83.3526 5.87784C83.4577 5.8892 83.5501 5.90483 83.6296 5.92472V7.53551C83.5444 7.50994 83.4265 7.48722 83.2759 7.46733C83.1254 7.44744 82.9876 7.4375 82.8626 7.4375C82.5955 7.4375 82.3569 7.49574 82.1467 7.61222C81.9393 7.72585 81.7745 7.88494 81.6523 8.08949C81.533 8.29403 81.4734 8.52983 81.4734 8.79688V12.5H79.658Z" fill="#5856D6"/>
              </svg>
           </button>`,
    footer: `
      <button id="reset-sort" class="cancel">Reset Sorting</button>
      <button id="submit-sort" class="success-modal-close-btn">Submit</button>
    `
  });

  const sortBody = document.getElementById("sort-body");
  const addBtn = document.getElementById("add-sorter-btn");

  const columns = [
    { key: "fullName", label: "Raised By" },
    { key: "email", label: "Email" },
    { key: "phone", label: "Phone" },
    { key: "subject", label: "Subject" },
    { key: "date", label: "Date Created" }
  ];

  function addSorterRow(defaultColumn = "", defaultOrder = "") {
    const row = document.createElement("div");
    row.className = "sort-row";
    row.innerHTML = `
      <select class="sort-column" style="flex:1; padding:6px;">
        <option value="">Select Column</option>
        ${columns.map(c => `<option value="${c.key}" ${c.key === defaultColumn ? "selected" : ""}>${c.label}</option>`).join("")}
      </select>
      <select class="sort-order" style="flex:1; padding:6px;">
        <option value="">Select Order</option>
        <option value="asc" ${defaultOrder==="asc"?"selected":""}>Ascending</option>
        <option value="desc" ${defaultOrder==="desc"?"selected":""}>Descending</option>
      </select>
      <button class="delete-sorter"  style="border:none;background:none;cursor:pointer; ">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 3V4H4V6H5V19C5 19.5304 5.21071 20.0391 5.58579 20.4142C5.96086 20.7893 6.46957 21 7 21H17C17.5304 21 18.0391 20.7893 18.4142 20.4142C18.7893 20.0391 19 19.5304 19 19V6H20V4H15V3H9ZM7 6H17V19H7V6ZM9 8V17H11V8H9ZM13 8V17H15V8H13Z" fill="#A10900"/>
        </svg>
      </button>
    `;
    row.querySelector(".delete-sorter").addEventListener("click", () => row.remove());
    sortBody.appendChild(row);
  }

  addBtn.addEventListener("click", () => addSorterRow());

  // Load existing params if any
  const params = new URLSearchParams(window.location.search);
  if (params.has("sortBy")) {
    const rules = params.get("sortBy").split(",");
    rules.forEach(rule => {
      const [col, ord] = rule.split(":");
      addSorterRow(col, ord);
    });
  } else {
    addSorterRow();
  }

  document.getElementById("reset-sort").addEventListener("click", () => {
    sortBody.innerHTML = "";
    window.history.pushState({}, "", window.location.pathname);
    renderTickets(); // render default order
  });

  document.getElementById("submit-sort").addEventListener("click", () => {
    const sorters = [...sortBody.querySelectorAll(".sort-row")].map(row => {
      const col = row.querySelector(".sort-column").value;
      const ord = row.querySelector(".sort-order").value;
      return col && ord ? `${col}:${ord}` : null;
    }).filter(Boolean);

    const newParams = new URLSearchParams(window.location.search);
    if (sorters.length) {
      newParams.set("sortBy", sorters.join(","));
    } else {
      newParams.delete("sortBy");
    }
    window.history.pushState({}, "", `${window.location.pathname}?${newParams}`);

    renderTickets();
    closeModal();
  });
});

// Apply sorting based on URL params
function applySorting(tickets) {
  const params = new URLSearchParams(window.location.search);
  const rules = params.get("sortBy") ? params.get("sortBy").split(",") : [];

  return tickets.sort((a, b) => {
    for (const rule of rules) {
      const [column, order] = rule.split(":");
      let valA = a[column];
      let valB = b[column];
      if (valA == null || valB == null) continue;

      switch (column) {
        case "fullName":
        case "email":
        case "subject":
          valA = valA.toLowerCase(); valB = valB.toLowerCase(); break;
        case "phone":
          valA = valA.replace(/\D/g, ""); valB = valB.replace(/\D/g, ""); break;
        case "date":
          valA = new Date(valA).getTime(); valB = new Date(valB).getTime(); break;
      }
      if (valA < valB) return order === "asc" ? -1 : 1;
      if (valA > valB) return order === "asc" ? 1 : -1;
    }
    return 0;
  });
}



const originalRenderTickets = window.renderTickets;
window.renderTickets = function() {
  let tickets = storage.get();
  tickets = applySorting(tickets);
  originalRenderTickets.call(this, tickets);
};
